/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: s2_dota_gcmessages_common.proto */

#ifndef PROTOBUF_C_s2_5fdota_5fgcmessages_5fcommon_2eproto__INCLUDED
#define PROTOBUF_C_s2_5fdota_5fgcmessages_5fcommon_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _CMatchPlayerAbilityUpgrade CMatchPlayerAbilityUpgrade;
typedef struct _CMatchAdditionalUnitInventory CMatchAdditionalUnitInventory;
typedef struct _CMatchHeroSelectEvent CMatchHeroSelectEvent;
typedef struct _CMsgDOTAMatch CMsgDOTAMatch;
typedef struct _CMsgDOTAMatch__Player CMsgDOTAMatch__Player;
typedef struct _CMsgDOTAMatch__Player__CustomGameData CMsgDOTAMatch__Player__CustomGameData;
typedef struct _CMsgDOTAMatch__BroadcasterInfo CMsgDOTAMatch__BroadcasterInfo;
typedef struct _CMsgDOTAMatch__BroadcasterChannel CMsgDOTAMatch__BroadcasterChannel;
typedef struct _CMsgDOTAMatch__CustomGameData CMsgDOTAMatch__CustomGameData;


/* --- enums --- */

typedef enum _CMsgDOTAMatch__ReplayState {
  CMSG_DOTAMATCH__REPLAY_STATE__REPLAY_AVAILABLE = 0,
  CMSG_DOTAMATCH__REPLAY_STATE__REPLAY_NOT_RECORDED = 1,
  CMSG_DOTAMATCH__REPLAY_STATE__REPLAY_EXPIRED = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CMSG_DOTAMATCH__REPLAY_STATE)
} CMsgDOTAMatch__ReplayState;
typedef enum _DOTAGameMode {
  DOTA__GAME_MODE__DOTA_GAMEMODE_NONE = 0,
  DOTA__GAME_MODE__DOTA_GAMEMODE_AP = 1,
  DOTA__GAME_MODE__DOTA_GAMEMODE_CM = 2,
  DOTA__GAME_MODE__DOTA_GAMEMODE_RD = 3,
  DOTA__GAME_MODE__DOTA_GAMEMODE_SD = 4,
  DOTA__GAME_MODE__DOTA_GAMEMODE_AR = 5,
  DOTA__GAME_MODE__DOTA_GAMEMODE_INTRO = 6,
  DOTA__GAME_MODE__DOTA_GAMEMODE_HW = 7,
  DOTA__GAME_MODE__DOTA_GAMEMODE_REVERSE_CM = 8,
  DOTA__GAME_MODE__DOTA_GAMEMODE_XMAS = 9,
  DOTA__GAME_MODE__DOTA_GAMEMODE_TUTORIAL = 10,
  DOTA__GAME_MODE__DOTA_GAMEMODE_MO = 11,
  DOTA__GAME_MODE__DOTA_GAMEMODE_LP = 12,
  DOTA__GAME_MODE__DOTA_GAMEMODE_POOL1 = 13,
  DOTA__GAME_MODE__DOTA_GAMEMODE_FH = 14,
  DOTA__GAME_MODE__DOTA_GAMEMODE_CUSTOM = 15,
  DOTA__GAME_MODE__DOTA_GAMEMODE_CD = 16,
  DOTA__GAME_MODE__DOTA_GAMEMODE_BD = 17,
  DOTA__GAME_MODE__DOTA_GAMEMODE_ABILITY_DRAFT = 18,
  DOTA__GAME_MODE__DOTA_GAMEMODE_EVENT = 19,
  DOTA__GAME_MODE__DOTA_GAMEMODE_ARDM = 20,
  DOTA__GAME_MODE__DOTA_GAMEMODE_1V1MID = 21,
  DOTA__GAME_MODE__DOTA_GAMEMODE_ALL_DRAFT = 22
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DOTA__GAME_MODE)
} DOTAGameMode;

/* --- messages --- */

struct  _CMatchPlayerAbilityUpgrade
{
  ProtobufCMessage base;
  protobuf_c_boolean has_ability;
  uint32_t ability;
  protobuf_c_boolean has_time;
  uint32_t time;
};
#define CMATCH_PLAYER_ABILITY_UPGRADE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmatch_player_ability_upgrade__descriptor) \
    , 0,0, 0,0 }


struct  _CMatchAdditionalUnitInventory
{
  ProtobufCMessage base;
  char *unit_name;
  size_t n_items;
  uint32_t *items;
};
#define CMATCH_ADDITIONAL_UNIT_INVENTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmatch_additional_unit_inventory__descriptor) \
    , NULL, 0,NULL }


struct  _CMatchHeroSelectEvent
{
  ProtobufCMessage base;
  protobuf_c_boolean has_is_pick;
  protobuf_c_boolean is_pick;
  protobuf_c_boolean has_team;
  uint32_t team;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
};
#define CMATCH_HERO_SELECT_EVENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmatch_hero_select_event__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _CMsgDOTAMatch__Player__CustomGameData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_dota_team;
  uint32_t dota_team;
  protobuf_c_boolean has_winner;
  protobuf_c_boolean winner;
};
#define CMSG_DOTAMATCH__PLAYER__CUSTOM_GAME_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch__player__custom_game_data__descriptor) \
    , 0,0, 0,0 }


struct  _CMsgDOTAMatch__Player
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  protobuf_c_boolean has_player_slot;
  uint32_t player_slot;
  protobuf_c_boolean has_hero_id;
  uint32_t hero_id;
  protobuf_c_boolean has_item_0;
  uint32_t item_0;
  protobuf_c_boolean has_item_1;
  uint32_t item_1;
  protobuf_c_boolean has_item_2;
  uint32_t item_2;
  protobuf_c_boolean has_item_3;
  uint32_t item_3;
  protobuf_c_boolean has_item_4;
  uint32_t item_4;
  protobuf_c_boolean has_item_5;
  uint32_t item_5;
  protobuf_c_boolean has_expected_team_contribution;
  float expected_team_contribution;
  protobuf_c_boolean has_scaled_metric;
  float scaled_metric;
  protobuf_c_boolean has_previous_rank;
  uint32_t previous_rank;
  protobuf_c_boolean has_rank_change;
  uint32_t rank_change;
  protobuf_c_boolean has_solo_rank;
  protobuf_c_boolean solo_rank;
  protobuf_c_boolean has_kills;
  uint32_t kills;
  protobuf_c_boolean has_deaths;
  uint32_t deaths;
  protobuf_c_boolean has_assists;
  uint32_t assists;
  protobuf_c_boolean has_leaver_status;
  uint32_t leaver_status;
  protobuf_c_boolean has_gold;
  uint32_t gold;
  protobuf_c_boolean has_last_hits;
  uint32_t last_hits;
  protobuf_c_boolean has_denies;
  uint32_t denies;
  protobuf_c_boolean has_gold_per_min;
  uint32_t gold_per_min;
  protobuf_c_boolean has_xp_per_min;
  uint32_t xp_per_min;
  protobuf_c_boolean has_gold_spent;
  uint32_t gold_spent;
  protobuf_c_boolean has_hero_damage;
  uint32_t hero_damage;
  protobuf_c_boolean has_tower_damage;
  uint32_t tower_damage;
  protobuf_c_boolean has_hero_healing;
  uint32_t hero_healing;
  protobuf_c_boolean has_level;
  uint32_t level;
  protobuf_c_boolean has_time_last_seen;
  uint32_t time_last_seen;
  char *player_name;
  protobuf_c_boolean has_support_ability_value;
  uint32_t support_ability_value;
  protobuf_c_boolean has_feeding_detected;
  protobuf_c_boolean feeding_detected;
  protobuf_c_boolean has_search_rank;
  uint32_t search_rank;
  protobuf_c_boolean has_search_rank_uncertainty;
  uint32_t search_rank_uncertainty;
  protobuf_c_boolean has_rank_uncertainty_change;
  int32_t rank_uncertainty_change;
  protobuf_c_boolean has_hero_play_count;
  uint32_t hero_play_count;
  protobuf_c_boolean has_party_id;
  uint64_t party_id;
  protobuf_c_boolean has_scaled_kills;
  float scaled_kills;
  protobuf_c_boolean has_scaled_deaths;
  float scaled_deaths;
  protobuf_c_boolean has_scaled_assists;
  float scaled_assists;
  protobuf_c_boolean has_claimed_farm_gold;
  uint32_t claimed_farm_gold;
  protobuf_c_boolean has_support_gold;
  uint32_t support_gold;
  protobuf_c_boolean has_claimed_denies;
  uint32_t claimed_denies;
  protobuf_c_boolean has_claimed_misses;
  uint32_t claimed_misses;
  protobuf_c_boolean has_misses;
  uint32_t misses;
  size_t n_ability_upgrades;
  CMatchPlayerAbilityUpgrade **ability_upgrades;
  size_t n_additional_units_inventory;
  CMatchAdditionalUnitInventory **additional_units_inventory;
  CMsgDOTAMatch__Player__CustomGameData *custom_game_data;
  protobuf_c_boolean has_active_battle_pass;
  protobuf_c_boolean active_battle_pass;
  protobuf_c_boolean has_net_worth;
  uint32_t net_worth;
};
#define CMSG_DOTAMATCH__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch__player__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,NULL, 0,NULL, NULL, 0,0, 0,0 }


struct  _CMsgDOTAMatch__BroadcasterInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_account_id;
  uint32_t account_id;
  char *name;
};
#define CMSG_DOTAMATCH__BROADCASTER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch__broadcaster_info__descriptor) \
    , 0,0, NULL }


struct  _CMsgDOTAMatch__BroadcasterChannel
{
  ProtobufCMessage base;
  char *country_code;
  char *description;
  size_t n_broadcaster_infos;
  CMsgDOTAMatch__BroadcasterInfo **broadcaster_infos;
  char *language_code;
};
#define CMSG_DOTAMATCH__BROADCASTER_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch__broadcaster_channel__descriptor) \
    , NULL, NULL, 0,NULL, NULL }


struct  _CMsgDOTAMatch__CustomGameData
{
  ProtobufCMessage base;
  protobuf_c_boolean has_custom_game_id;
  uint64_t custom_game_id;
  char *map_name;
};
#define CMSG_DOTAMATCH__CUSTOM_GAME_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch__custom_game_data__descriptor) \
    , 0,0, NULL }


struct  _CMsgDOTAMatch
{
  ProtobufCMessage base;
  protobuf_c_boolean has_good_guys_win;
  protobuf_c_boolean good_guys_win;
  protobuf_c_boolean has_duration;
  uint32_t duration;
  protobuf_c_boolean has_starttime;
  uint32_t starttime;
  size_t n_players;
  CMsgDOTAMatch__Player **players;
  protobuf_c_boolean has_match_id;
  uint64_t match_id;
  size_t n_tower_status;
  uint32_t *tower_status;
  size_t n_barracks_status;
  uint32_t *barracks_status;
  protobuf_c_boolean has_cluster;
  uint32_t cluster;
  protobuf_c_boolean has_first_blood_time;
  uint32_t first_blood_time;
  protobuf_c_boolean has_replay_salt;
  uint32_t replay_salt;
  protobuf_c_boolean has_server_ip;
  uint32_t server_ip;
  protobuf_c_boolean has_server_port;
  uint32_t server_port;
  protobuf_c_boolean has_lobby_type;
  uint32_t lobby_type;
  protobuf_c_boolean has_human_players;
  uint32_t human_players;
  protobuf_c_boolean has_average_skill;
  uint32_t average_skill;
  protobuf_c_boolean has_game_balance;
  float game_balance;
  protobuf_c_boolean has_radiant_team_id;
  uint32_t radiant_team_id;
  protobuf_c_boolean has_dire_team_id;
  uint32_t dire_team_id;
  protobuf_c_boolean has_leagueid;
  uint32_t leagueid;
  char *radiant_team_name;
  char *dire_team_name;
  protobuf_c_boolean has_radiant_team_logo;
  uint64_t radiant_team_logo;
  protobuf_c_boolean has_dire_team_logo;
  uint64_t dire_team_logo;
  protobuf_c_boolean has_radiant_team_complete;
  uint32_t radiant_team_complete;
  protobuf_c_boolean has_dire_team_complete;
  uint32_t dire_team_complete;
  protobuf_c_boolean has_positive_votes;
  uint32_t positive_votes;
  protobuf_c_boolean has_negative_votes;
  uint32_t negative_votes;
  protobuf_c_boolean has_game_mode;
  DOTAGameMode game_mode;
  size_t n_picks_bans;
  CMatchHeroSelectEvent **picks_bans;
  protobuf_c_boolean has_match_seq_num;
  uint64_t match_seq_num;
  protobuf_c_boolean has_replay_state;
  CMsgDOTAMatch__ReplayState replay_state;
  protobuf_c_boolean has_radiant_guild_id;
  uint32_t radiant_guild_id;
  protobuf_c_boolean has_dire_guild_id;
  uint32_t dire_guild_id;
  char *radiant_team_tag;
  char *dire_team_tag;
  protobuf_c_boolean has_series_id;
  uint32_t series_id;
  protobuf_c_boolean has_series_type;
  uint32_t series_type;
  size_t n_broadcaster_channels;
  CMsgDOTAMatch__BroadcasterChannel **broadcaster_channels;
  protobuf_c_boolean has_engine;
  uint32_t engine;
  CMsgDOTAMatch__CustomGameData *custom_game_data;
  protobuf_c_boolean has_match_flags;
  uint32_t match_flags;
  protobuf_c_boolean has_private_metadata_key;
  uint32_t private_metadata_key;
  protobuf_c_boolean has_radiant_team_score;
  uint32_t radiant_team_score;
  protobuf_c_boolean has_dire_team_score;
  uint32_t dire_team_score;
};
#define CMSG_DOTAMATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cmsg_dotamatch__descriptor) \
    , 0,0, 0,0, 0,0, 0,NULL, 0,0, 0,NULL, 0,NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,DOTA__GAME_MODE__DOTA_GAMEMODE_NONE, 0,NULL, 0,0, 0,CMSG_DOTAMATCH__REPLAY_STATE__REPLAY_AVAILABLE, 0,0, 0,0, NULL, NULL, 0,0, 0,0, 0,NULL, 0,0, NULL, 0,0, 0,0, 0,0, 0,0 }


/* CMatchPlayerAbilityUpgrade methods */
void   cmatch_player_ability_upgrade__init
                     (CMatchPlayerAbilityUpgrade         *message);
size_t cmatch_player_ability_upgrade__get_packed_size
                     (const CMatchPlayerAbilityUpgrade   *message);
size_t cmatch_player_ability_upgrade__pack
                     (const CMatchPlayerAbilityUpgrade   *message,
                      uint8_t             *out);
size_t cmatch_player_ability_upgrade__pack_to_buffer
                     (const CMatchPlayerAbilityUpgrade   *message,
                      ProtobufCBuffer     *buffer);
CMatchPlayerAbilityUpgrade *
       cmatch_player_ability_upgrade__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmatch_player_ability_upgrade__free_unpacked
                     (CMatchPlayerAbilityUpgrade *message,
                      ProtobufCAllocator *allocator);
/* CMatchAdditionalUnitInventory methods */
void   cmatch_additional_unit_inventory__init
                     (CMatchAdditionalUnitInventory         *message);
size_t cmatch_additional_unit_inventory__get_packed_size
                     (const CMatchAdditionalUnitInventory   *message);
size_t cmatch_additional_unit_inventory__pack
                     (const CMatchAdditionalUnitInventory   *message,
                      uint8_t             *out);
size_t cmatch_additional_unit_inventory__pack_to_buffer
                     (const CMatchAdditionalUnitInventory   *message,
                      ProtobufCBuffer     *buffer);
CMatchAdditionalUnitInventory *
       cmatch_additional_unit_inventory__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmatch_additional_unit_inventory__free_unpacked
                     (CMatchAdditionalUnitInventory *message,
                      ProtobufCAllocator *allocator);
/* CMatchHeroSelectEvent methods */
void   cmatch_hero_select_event__init
                     (CMatchHeroSelectEvent         *message);
size_t cmatch_hero_select_event__get_packed_size
                     (const CMatchHeroSelectEvent   *message);
size_t cmatch_hero_select_event__pack
                     (const CMatchHeroSelectEvent   *message,
                      uint8_t             *out);
size_t cmatch_hero_select_event__pack_to_buffer
                     (const CMatchHeroSelectEvent   *message,
                      ProtobufCBuffer     *buffer);
CMatchHeroSelectEvent *
       cmatch_hero_select_event__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmatch_hero_select_event__free_unpacked
                     (CMatchHeroSelectEvent *message,
                      ProtobufCAllocator *allocator);
/* CMsgDOTAMatch__Player__CustomGameData methods */
void   cmsg_dotamatch__player__custom_game_data__init
                     (CMsgDOTAMatch__Player__CustomGameData         *message);
/* CMsgDOTAMatch__Player methods */
void   cmsg_dotamatch__player__init
                     (CMsgDOTAMatch__Player         *message);
/* CMsgDOTAMatch__BroadcasterInfo methods */
void   cmsg_dotamatch__broadcaster_info__init
                     (CMsgDOTAMatch__BroadcasterInfo         *message);
/* CMsgDOTAMatch__BroadcasterChannel methods */
void   cmsg_dotamatch__broadcaster_channel__init
                     (CMsgDOTAMatch__BroadcasterChannel         *message);
/* CMsgDOTAMatch__CustomGameData methods */
void   cmsg_dotamatch__custom_game_data__init
                     (CMsgDOTAMatch__CustomGameData         *message);
/* CMsgDOTAMatch methods */
void   cmsg_dotamatch__init
                     (CMsgDOTAMatch         *message);
size_t cmsg_dotamatch__get_packed_size
                     (const CMsgDOTAMatch   *message);
size_t cmsg_dotamatch__pack
                     (const CMsgDOTAMatch   *message,
                      uint8_t             *out);
size_t cmsg_dotamatch__pack_to_buffer
                     (const CMsgDOTAMatch   *message,
                      ProtobufCBuffer     *buffer);
CMsgDOTAMatch *
       cmsg_dotamatch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cmsg_dotamatch__free_unpacked
                     (CMsgDOTAMatch *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CMatchPlayerAbilityUpgrade_Closure)
                 (const CMatchPlayerAbilityUpgrade *message,
                  void *closure_data);
typedef void (*CMatchAdditionalUnitInventory_Closure)
                 (const CMatchAdditionalUnitInventory *message,
                  void *closure_data);
typedef void (*CMatchHeroSelectEvent_Closure)
                 (const CMatchHeroSelectEvent *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatch__Player__CustomGameData_Closure)
                 (const CMsgDOTAMatch__Player__CustomGameData *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatch__Player_Closure)
                 (const CMsgDOTAMatch__Player *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatch__BroadcasterInfo_Closure)
                 (const CMsgDOTAMatch__BroadcasterInfo *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatch__BroadcasterChannel_Closure)
                 (const CMsgDOTAMatch__BroadcasterChannel *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatch__CustomGameData_Closure)
                 (const CMsgDOTAMatch__CustomGameData *message,
                  void *closure_data);
typedef void (*CMsgDOTAMatch_Closure)
                 (const CMsgDOTAMatch *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    dota__game_mode__descriptor;
extern const ProtobufCMessageDescriptor cmatch_player_ability_upgrade__descriptor;
extern const ProtobufCMessageDescriptor cmatch_additional_unit_inventory__descriptor;
extern const ProtobufCMessageDescriptor cmatch_hero_select_event__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch__player__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch__player__custom_game_data__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch__broadcaster_info__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch__broadcaster_channel__descriptor;
extern const ProtobufCMessageDescriptor cmsg_dotamatch__custom_game_data__descriptor;
extern const ProtobufCEnumDescriptor    cmsg_dotamatch__replay_state__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_s2_5fdota_5fgcmessages_5fcommon_2eproto__INCLUDED */
